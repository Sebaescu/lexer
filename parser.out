Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CLASS
    DOT
    EXPONENTIATION
    FALSE
    IDENTITY
    INPUT
    INTERFACE
    MACUMULATIVE
    NEW
    NIDENTITY
    NOT
    NULL
    OR
    QUESTION
    QUEUE
    STACK
    TRUE
    WHILE

Grammar

Rule 0     S' -> php_block
Rule 1     php_block -> PHP_OPEN statement_list PHP_CLOSE
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> asignacion
Rule 5     statement -> impresion
Rule 6     statement -> if_statement
Rule 7     statement -> funcion
Rule 8     statement -> declarar_array
Rule 9     statement -> retorno
Rule 10    statement -> input_statement
Rule 11    statement -> for_statement
Rule 12    statement -> empty
Rule 13    input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
Rule 14    funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
Rule 15    asignacion -> VARIABLE ASSIGN expresion SEMICOL
Rule 16    asignacion -> VARIABLE ASSIGN condicion SEMICOL
Rule 17    asignacion -> array_access ASSIGN expresion SEMICOL
Rule 18    impresion -> ECHO SEMICOL
Rule 19    impresion -> ECHO expresion SEMICOL
Rule 20    impresion -> ECHO expresion_list SEMICOL
Rule 21    expresion_list -> expresion
Rule 22    expresion_list -> expresion COMA expresion_list
Rule 23    expresion -> termino
Rule 24    expresion -> termino operador expresion
Rule 25    expresion -> termino comparador termino
Rule 26    expresion -> LPAREN expresion RPAREN operador expresion
Rule 27    expresion -> LPAREN expresion RPAREN
Rule 28    expresion -> llamada_funcion
Rule 29    expresion -> array_access
Rule 30    termino -> VARIABLE
Rule 31    termino -> NUMBER
Rule 32    termino -> FLOAT
Rule 33    termino -> STRING
Rule 34    condicion -> expresion comparador expresion
Rule 35    condicion -> condicion AND_OP condicion
Rule 36    condicion -> condicion OR_OP condicion
Rule 37    condicion -> NOT_OP condicion
Rule 38    condicion -> expresion
Rule 39    comparador -> EQ
Rule 40    comparador -> NEQ
Rule 41    comparador -> GT
Rule 42    comparador -> LT
Rule 43    comparador -> GE
Rule 44    comparador -> LE
Rule 45    operador -> PLUS
Rule 46    operador -> MINUS
Rule 47    operador -> TIMES
Rule 48    operador -> DIVIDE
Rule 49    operador -> MOD
Rule 50    if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
Rule 51    if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 52    if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
Rule 53    elseif_blocks -> ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE
Rule 54    elseif_blocks -> elseif_blocks ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE
Rule 55    for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
Rule 56    initialization -> VARIABLE ASSIGN expresion
Rule 57    initialization -> initialization COMA VARIABLE ASSIGN expresion
Rule 58    condition -> expresion comparador expresion
Rule 59    increment -> VARIABLE INCREMENT
Rule 60    increment -> VARIABLE DECREMENT
Rule 61    parametros -> VARIABLE
Rule 62    parametros -> VARIABLE COMA parametros
Rule 63    parametros -> empty
Rule 64    declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
Rule 65    declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
Rule 66    argumentos -> expresion
Rule 67    argumentos -> expresion COMA argumentos
Rule 68    argumentos -> empty
Rule 69    retorno -> RETURN expresion SEMICOL
Rule 70    llamada_funcion -> VARIABLE LPAREN argumentos RPAREN
Rule 71    array_access -> VARIABLE LBRACKET expresion RBRACKET
Rule 72    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
AND_OP               : 35
ARRAY                : 64
ASSIGN               : 13 15 16 17 56 57 64 65
CLASS                : 
COMA                 : 22 57 62 67
DECREMENT            : 60
DIVIDE               : 48
DOT                  : 
ECHO                 : 18 19 20
ELSE                 : 51 52
ELSEIF               : 53 54
EQ                   : 39
EXPONENTIATION       : 
FALSE                : 
FLOAT                : 32
FOR                  : 55
FUNCTION             : 14
GE                   : 43
GT                   : 41
IDENTITY             : 
IF                   : 50 51 52
INCREMENT            : 59
INPUT                : 
INTERFACE            : 
LBRACE               : 14 50 51 51 52 52 53 54 55
LBRACKET             : 65 71
LE                   : 44
LPAREN               : 13 14 26 27 50 51 52 53 54 55 64 70
LT                   : 42
MACUMULATIVE         : 
MINUS                : 46
MOD                  : 49
NAMEFUNCTION         : 14
NEQ                  : 40
NEW                  : 
NIDENTITY            : 
NOT                  : 
NOT_OP               : 37
NULL                 : 
NUMBER               : 31
OR                   : 
OR_OP                : 36
PHP_CLOSE            : 1
PHP_OPEN             : 1
PLUS                 : 43
QUESTION             : 
QUEUE                : 
RBRACE               : 14 50 51 51 52 52 53 54 55
RBRACKET             : 65 71
READLINE             : 13
RETURN               : 69
RPAREN               : 13 14 26 27 50 51 52 53 54 55 64 70
SEMICOL              : 13 15 16 17 18 19 20 64 65 69
STACK                : 
STRING               : 13 33
TIMES                : 47
TRUE                 : 
VARIABLE             : 13 15 16 30 56 57 59 60 61 62 64 65 70 71
WHILE                : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 64 65 67 70
array_access         : 17 29
asignacion           : 4
comparador           : 25 34 58
condicion            : 16 35 35 36 36 37 50 51 52 53 54
condition            : 55
declarar_array       : 8
elseif_blocks        : 52 54
empty                : 12 63 68
expresion            : 15 17 19 21 22 24 26 26 27 34 34 38 56 57 58 58 66 67 69 71
expresion_list       : 20 22
for_statement        : 11
funcion              : 7
if_statement         : 6
impresion            : 5
increment            : 55
initialization       : 55 57
input_statement      : 10
llamada_funcion      : 28
operador             : 24 26
parametros           : 14 62
php_block            : 0
retorno              : 9
statement            : 2 3
statement_list       : 1 3 14 50 51 51 52 52 53 54 55
termino              : 23 24 25 25

Parsing method: LALR

state 0

    (0) S' -> . php_block
    (1) php_block -> . PHP_OPEN statement_list PHP_CLOSE

    PHP_OPEN        shift and go to state 2

    php_block                      shift and go to state 1

state 1

    (0) S' -> php_block .



state 2

    (1) php_block -> PHP_OPEN . statement_list PHP_CLOSE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20
    PHP_CLOSE       reduce using rule 72 (empty -> .)

  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement_list                 shift and go to state 3
    statement                      shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 3

    (1) php_block -> PHP_OPEN statement_list . PHP_CLOSE
    (3) statement_list -> statement_list . statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for PHP_CLOSE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    PHP_CLOSE       shift and go to state 21
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20

  ! PHP_CLOSE       [ reduce using rule 72 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement                      shift and go to state 22
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 4

    (2) statement_list -> statement .

    PHP_CLOSE       reduce using rule 2 (statement_list -> statement .)
    VARIABLE        reduce using rule 2 (statement_list -> statement .)
    ECHO            reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    FUNCTION        reduce using rule 2 (statement_list -> statement .)
    RETURN          reduce using rule 2 (statement_list -> statement .)
    FOR             reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 5

    (4) statement -> asignacion .

    PHP_CLOSE       reduce using rule 4 (statement -> asignacion .)
    VARIABLE        reduce using rule 4 (statement -> asignacion .)
    ECHO            reduce using rule 4 (statement -> asignacion .)
    IF              reduce using rule 4 (statement -> asignacion .)
    FUNCTION        reduce using rule 4 (statement -> asignacion .)
    RETURN          reduce using rule 4 (statement -> asignacion .)
    FOR             reduce using rule 4 (statement -> asignacion .)
    RBRACE          reduce using rule 4 (statement -> asignacion .)


state 6

    (5) statement -> impresion .

    PHP_CLOSE       reduce using rule 5 (statement -> impresion .)
    VARIABLE        reduce using rule 5 (statement -> impresion .)
    ECHO            reduce using rule 5 (statement -> impresion .)
    IF              reduce using rule 5 (statement -> impresion .)
    FUNCTION        reduce using rule 5 (statement -> impresion .)
    RETURN          reduce using rule 5 (statement -> impresion .)
    FOR             reduce using rule 5 (statement -> impresion .)
    RBRACE          reduce using rule 5 (statement -> impresion .)


state 7

    (6) statement -> if_statement .

    PHP_CLOSE       reduce using rule 6 (statement -> if_statement .)
    VARIABLE        reduce using rule 6 (statement -> if_statement .)
    ECHO            reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    FUNCTION        reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    FOR             reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 8

    (7) statement -> funcion .

    PHP_CLOSE       reduce using rule 7 (statement -> funcion .)
    VARIABLE        reduce using rule 7 (statement -> funcion .)
    ECHO            reduce using rule 7 (statement -> funcion .)
    IF              reduce using rule 7 (statement -> funcion .)
    FUNCTION        reduce using rule 7 (statement -> funcion .)
    RETURN          reduce using rule 7 (statement -> funcion .)
    FOR             reduce using rule 7 (statement -> funcion .)
    RBRACE          reduce using rule 7 (statement -> funcion .)


state 9

    (8) statement -> declarar_array .

    PHP_CLOSE       reduce using rule 8 (statement -> declarar_array .)
    VARIABLE        reduce using rule 8 (statement -> declarar_array .)
    ECHO            reduce using rule 8 (statement -> declarar_array .)
    IF              reduce using rule 8 (statement -> declarar_array .)
    FUNCTION        reduce using rule 8 (statement -> declarar_array .)
    RETURN          reduce using rule 8 (statement -> declarar_array .)
    FOR             reduce using rule 8 (statement -> declarar_array .)
    RBRACE          reduce using rule 8 (statement -> declarar_array .)


state 10

    (9) statement -> retorno .

    PHP_CLOSE       reduce using rule 9 (statement -> retorno .)
    VARIABLE        reduce using rule 9 (statement -> retorno .)
    ECHO            reduce using rule 9 (statement -> retorno .)
    IF              reduce using rule 9 (statement -> retorno .)
    FUNCTION        reduce using rule 9 (statement -> retorno .)
    RETURN          reduce using rule 9 (statement -> retorno .)
    FOR             reduce using rule 9 (statement -> retorno .)
    RBRACE          reduce using rule 9 (statement -> retorno .)


state 11

    (10) statement -> input_statement .

    PHP_CLOSE       reduce using rule 10 (statement -> input_statement .)
    VARIABLE        reduce using rule 10 (statement -> input_statement .)
    ECHO            reduce using rule 10 (statement -> input_statement .)
    IF              reduce using rule 10 (statement -> input_statement .)
    FUNCTION        reduce using rule 10 (statement -> input_statement .)
    RETURN          reduce using rule 10 (statement -> input_statement .)
    FOR             reduce using rule 10 (statement -> input_statement .)
    RBRACE          reduce using rule 10 (statement -> input_statement .)


state 12

    (11) statement -> for_statement .

    PHP_CLOSE       reduce using rule 11 (statement -> for_statement .)
    VARIABLE        reduce using rule 11 (statement -> for_statement .)
    ECHO            reduce using rule 11 (statement -> for_statement .)
    IF              reduce using rule 11 (statement -> for_statement .)
    FUNCTION        reduce using rule 11 (statement -> for_statement .)
    RETURN          reduce using rule 11 (statement -> for_statement .)
    FOR             reduce using rule 11 (statement -> for_statement .)
    RBRACE          reduce using rule 11 (statement -> for_statement .)


state 13

    (12) statement -> empty .

    PHP_CLOSE       reduce using rule 12 (statement -> empty .)
    VARIABLE        reduce using rule 12 (statement -> empty .)
    ECHO            reduce using rule 12 (statement -> empty .)
    IF              reduce using rule 12 (statement -> empty .)
    FUNCTION        reduce using rule 12 (statement -> empty .)
    RETURN          reduce using rule 12 (statement -> empty .)
    FOR             reduce using rule 12 (statement -> empty .)
    RBRACE          reduce using rule 12 (statement -> empty .)


state 14

    (15) asignacion -> VARIABLE . ASSIGN expresion SEMICOL
    (16) asignacion -> VARIABLE . ASSIGN condicion SEMICOL
    (64) declarar_array -> VARIABLE . ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> VARIABLE . ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (13) input_statement -> VARIABLE . ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (71) array_access -> VARIABLE . LBRACKET expresion RBRACKET

    ASSIGN          shift and go to state 23
    LBRACKET        shift and go to state 24


state 15

    (17) asignacion -> array_access . ASSIGN expresion SEMICOL

    ASSIGN          shift and go to state 25


state 16

    (18) impresion -> ECHO . SEMICOL
    (19) impresion -> ECHO . expresion SEMICOL
    (20) impresion -> ECHO . expresion_list SEMICOL
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (21) expresion_list -> . expresion
    (22) expresion_list -> . expresion COMA expresion_list
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    SEMICOL         shift and go to state 26
    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 27
    expresion_list                 shift and go to state 28
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 17

    (50) if_statement -> IF . LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> IF . LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> IF . LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE

    LPAREN          shift and go to state 37


state 18

    (14) funcion -> FUNCTION . NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE

    NAMEFUNCTION    shift and go to state 38


state 19

    (69) retorno -> RETURN . expresion SEMICOL
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 39
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 20

    (55) for_statement -> FOR . LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 40


state 21

    (1) php_block -> PHP_OPEN statement_list PHP_CLOSE .

    $end            reduce using rule 1 (php_block -> PHP_OPEN statement_list PHP_CLOSE .)


state 22

    (3) statement_list -> statement_list statement .

    PHP_CLOSE       reduce using rule 3 (statement_list -> statement_list statement .)
    VARIABLE        reduce using rule 3 (statement_list -> statement_list statement .)
    ECHO            reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    FUNCTION        reduce using rule 3 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 3 (statement_list -> statement_list statement .)
    FOR             reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 23

    (15) asignacion -> VARIABLE ASSIGN . expresion SEMICOL
    (16) asignacion -> VARIABLE ASSIGN . condicion SEMICOL
    (64) declarar_array -> VARIABLE ASSIGN . ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> VARIABLE ASSIGN . LBRACKET argumentos RBRACKET SEMICOL
    (13) input_statement -> VARIABLE ASSIGN . READLINE LPAREN STRING RPAREN SEMICOL
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (34) condicion -> . expresion comparador expresion
    (35) condicion -> . condicion AND_OP condicion
    (36) condicion -> . condicion OR_OP condicion
    (37) condicion -> . NOT_OP condicion
    (38) condicion -> . expresion
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    ARRAY           shift and go to state 43
    LBRACKET        shift and go to state 44
    READLINE        shift and go to state 45
    LPAREN          shift and go to state 30
    NOT_OP          shift and go to state 46
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 41
    condicion                      shift and go to state 42
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 24

    (71) array_access -> VARIABLE LBRACKET . expresion RBRACKET
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 47
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 25

    (17) asignacion -> array_access ASSIGN . expresion SEMICOL
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    array_access                   shift and go to state 32
    expresion                      shift and go to state 48
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31

state 26

    (18) impresion -> ECHO SEMICOL .

    PHP_CLOSE       reduce using rule 18 (impresion -> ECHO SEMICOL .)
    VARIABLE        reduce using rule 18 (impresion -> ECHO SEMICOL .)
    ECHO            reduce using rule 18 (impresion -> ECHO SEMICOL .)
    IF              reduce using rule 18 (impresion -> ECHO SEMICOL .)
    FUNCTION        reduce using rule 18 (impresion -> ECHO SEMICOL .)
    RETURN          reduce using rule 18 (impresion -> ECHO SEMICOL .)
    FOR             reduce using rule 18 (impresion -> ECHO SEMICOL .)
    RBRACE          reduce using rule 18 (impresion -> ECHO SEMICOL .)


state 27

    (19) impresion -> ECHO expresion . SEMICOL
    (21) expresion_list -> expresion .
    (22) expresion_list -> expresion . COMA expresion_list

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 49
    COMA            shift and go to state 50

  ! SEMICOL         [ reduce using rule 21 (expresion_list -> expresion .) ]


state 28

    (20) impresion -> ECHO expresion_list . SEMICOL

    SEMICOL         shift and go to state 51


state 29

    (23) expresion -> termino .
    (24) expresion -> termino . operador expresion
    (25) expresion -> termino . comparador termino
    (45) operador -> . PLUS
    (46) operador -> . MINUS
    (47) operador -> . TIMES
    (48) operador -> . DIVIDE
    (49) operador -> . MOD
    (39) comparador -> . EQ
    (40) comparador -> . NEQ
    (41) comparador -> . GT
    (42) comparador -> . LT
    (43) comparador -> . GE
    (44) comparador -> . LE

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    SEMICOL         reduce using rule 23 (expresion -> termino .)
    COMA            reduce using rule 23 (expresion -> termino .)
    AND_OP          reduce using rule 23 (expresion -> termino .)
    OR_OP           reduce using rule 23 (expresion -> termino .)
    RBRACKET        reduce using rule 23 (expresion -> termino .)
    RPAREN          reduce using rule 23 (expresion -> termino .)
    LPAREN          reduce using rule 23 (expresion -> termino .)
    VARIABLE        reduce using rule 23 (expresion -> termino .)
    NUMBER          reduce using rule 23 (expresion -> termino .)
    FLOAT           reduce using rule 23 (expresion -> termino .)
    STRING          reduce using rule 23 (expresion -> termino .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    GE              shift and go to state 63
    LE              shift and go to state 64

  ! EQ              [ reduce using rule 23 (expresion -> termino .) ]
  ! NEQ             [ reduce using rule 23 (expresion -> termino .) ]
  ! GT              [ reduce using rule 23 (expresion -> termino .) ]
  ! LT              [ reduce using rule 23 (expresion -> termino .) ]
  ! GE              [ reduce using rule 23 (expresion -> termino .) ]
  ! LE              [ reduce using rule 23 (expresion -> termino .) ]

    operador                       shift and go to state 52
    comparador                     shift and go to state 53

state 30

    (26) expresion -> LPAREN . expresion RPAREN operador expresion
    (27) expresion -> LPAREN . expresion RPAREN
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 65
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 31

    (28) expresion -> llamada_funcion .

    SEMICOL         reduce using rule 28 (expresion -> llamada_funcion .)
    COMA            reduce using rule 28 (expresion -> llamada_funcion .)
    EQ              reduce using rule 28 (expresion -> llamada_funcion .)
    NEQ             reduce using rule 28 (expresion -> llamada_funcion .)
    GT              reduce using rule 28 (expresion -> llamada_funcion .)
    LT              reduce using rule 28 (expresion -> llamada_funcion .)
    GE              reduce using rule 28 (expresion -> llamada_funcion .)
    LE              reduce using rule 28 (expresion -> llamada_funcion .)
    AND_OP          reduce using rule 28 (expresion -> llamada_funcion .)
    OR_OP           reduce using rule 28 (expresion -> llamada_funcion .)
    RBRACKET        reduce using rule 28 (expresion -> llamada_funcion .)
    RPAREN          reduce using rule 28 (expresion -> llamada_funcion .)
    LPAREN          reduce using rule 28 (expresion -> llamada_funcion .)
    VARIABLE        reduce using rule 28 (expresion -> llamada_funcion .)
    NUMBER          reduce using rule 28 (expresion -> llamada_funcion .)
    FLOAT           reduce using rule 28 (expresion -> llamada_funcion .)
    STRING          reduce using rule 28 (expresion -> llamada_funcion .)


state 32

    (29) expresion -> array_access .

    SEMICOL         reduce using rule 29 (expresion -> array_access .)
    COMA            reduce using rule 29 (expresion -> array_access .)
    EQ              reduce using rule 29 (expresion -> array_access .)
    NEQ             reduce using rule 29 (expresion -> array_access .)
    GT              reduce using rule 29 (expresion -> array_access .)
    LT              reduce using rule 29 (expresion -> array_access .)
    GE              reduce using rule 29 (expresion -> array_access .)
    LE              reduce using rule 29 (expresion -> array_access .)
    AND_OP          reduce using rule 29 (expresion -> array_access .)
    OR_OP           reduce using rule 29 (expresion -> array_access .)
    RBRACKET        reduce using rule 29 (expresion -> array_access .)
    RPAREN          reduce using rule 29 (expresion -> array_access .)
    LPAREN          reduce using rule 29 (expresion -> array_access .)
    VARIABLE        reduce using rule 29 (expresion -> array_access .)
    NUMBER          reduce using rule 29 (expresion -> array_access .)
    FLOAT           reduce using rule 29 (expresion -> array_access .)
    STRING          reduce using rule 29 (expresion -> array_access .)


state 33

    (30) termino -> VARIABLE .
    (70) llamada_funcion -> VARIABLE . LPAREN argumentos RPAREN
    (71) array_access -> VARIABLE . LBRACKET expresion RBRACKET

  ! shift/reduce conflict for LPAREN resolved as shift
    PLUS            reduce using rule 30 (termino -> VARIABLE .)
    MINUS           reduce using rule 30 (termino -> VARIABLE .)
    TIMES           reduce using rule 30 (termino -> VARIABLE .)
    DIVIDE          reduce using rule 30 (termino -> VARIABLE .)
    MOD             reduce using rule 30 (termino -> VARIABLE .)
    EQ              reduce using rule 30 (termino -> VARIABLE .)
    NEQ             reduce using rule 30 (termino -> VARIABLE .)
    GT              reduce using rule 30 (termino -> VARIABLE .)
    LT              reduce using rule 30 (termino -> VARIABLE .)
    GE              reduce using rule 30 (termino -> VARIABLE .)
    LE              reduce using rule 30 (termino -> VARIABLE .)
    SEMICOL         reduce using rule 30 (termino -> VARIABLE .)
    COMA            reduce using rule 30 (termino -> VARIABLE .)
    AND_OP          reduce using rule 30 (termino -> VARIABLE .)
    OR_OP           reduce using rule 30 (termino -> VARIABLE .)
    RBRACKET        reduce using rule 30 (termino -> VARIABLE .)
    RPAREN          reduce using rule 30 (termino -> VARIABLE .)
    VARIABLE        reduce using rule 30 (termino -> VARIABLE .)
    NUMBER          reduce using rule 30 (termino -> VARIABLE .)
    FLOAT           reduce using rule 30 (termino -> VARIABLE .)
    STRING          reduce using rule 30 (termino -> VARIABLE .)
    LPAREN          shift and go to state 66
    LBRACKET        shift and go to state 24

  ! LPAREN          [ reduce using rule 30 (termino -> VARIABLE .) ]


state 34

    (31) termino -> NUMBER .

    PLUS            reduce using rule 31 (termino -> NUMBER .)
    MINUS           reduce using rule 31 (termino -> NUMBER .)
    TIMES           reduce using rule 31 (termino -> NUMBER .)
    DIVIDE          reduce using rule 31 (termino -> NUMBER .)
    MOD             reduce using rule 31 (termino -> NUMBER .)
    EQ              reduce using rule 31 (termino -> NUMBER .)
    NEQ             reduce using rule 31 (termino -> NUMBER .)
    GT              reduce using rule 31 (termino -> NUMBER .)
    LT              reduce using rule 31 (termino -> NUMBER .)
    GE              reduce using rule 31 (termino -> NUMBER .)
    LE              reduce using rule 31 (termino -> NUMBER .)
    SEMICOL         reduce using rule 31 (termino -> NUMBER .)
    COMA            reduce using rule 31 (termino -> NUMBER .)
    AND_OP          reduce using rule 31 (termino -> NUMBER .)
    OR_OP           reduce using rule 31 (termino -> NUMBER .)
    RBRACKET        reduce using rule 31 (termino -> NUMBER .)
    RPAREN          reduce using rule 31 (termino -> NUMBER .)
    LPAREN          reduce using rule 31 (termino -> NUMBER .)
    VARIABLE        reduce using rule 31 (termino -> NUMBER .)
    NUMBER          reduce using rule 31 (termino -> NUMBER .)
    FLOAT           reduce using rule 31 (termino -> NUMBER .)
    STRING          reduce using rule 31 (termino -> NUMBER .)


state 35

    (32) termino -> FLOAT .

    PLUS            reduce using rule 32 (termino -> FLOAT .)
    MINUS           reduce using rule 32 (termino -> FLOAT .)
    TIMES           reduce using rule 32 (termino -> FLOAT .)
    DIVIDE          reduce using rule 32 (termino -> FLOAT .)
    MOD             reduce using rule 32 (termino -> FLOAT .)
    EQ              reduce using rule 32 (termino -> FLOAT .)
    NEQ             reduce using rule 32 (termino -> FLOAT .)
    GT              reduce using rule 32 (termino -> FLOAT .)
    LT              reduce using rule 32 (termino -> FLOAT .)
    GE              reduce using rule 32 (termino -> FLOAT .)
    LE              reduce using rule 32 (termino -> FLOAT .)
    SEMICOL         reduce using rule 32 (termino -> FLOAT .)
    COMA            reduce using rule 32 (termino -> FLOAT .)
    AND_OP          reduce using rule 32 (termino -> FLOAT .)
    OR_OP           reduce using rule 32 (termino -> FLOAT .)
    RBRACKET        reduce using rule 32 (termino -> FLOAT .)
    RPAREN          reduce using rule 32 (termino -> FLOAT .)
    LPAREN          reduce using rule 32 (termino -> FLOAT .)
    VARIABLE        reduce using rule 32 (termino -> FLOAT .)
    NUMBER          reduce using rule 32 (termino -> FLOAT .)
    FLOAT           reduce using rule 32 (termino -> FLOAT .)
    STRING          reduce using rule 32 (termino -> FLOAT .)


state 36

    (33) termino -> STRING .

    PLUS            reduce using rule 33 (termino -> STRING .)
    MINUS           reduce using rule 33 (termino -> STRING .)
    TIMES           reduce using rule 33 (termino -> STRING .)
    DIVIDE          reduce using rule 33 (termino -> STRING .)
    MOD             reduce using rule 33 (termino -> STRING .)
    EQ              reduce using rule 33 (termino -> STRING .)
    NEQ             reduce using rule 33 (termino -> STRING .)
    GT              reduce using rule 33 (termino -> STRING .)
    LT              reduce using rule 33 (termino -> STRING .)
    GE              reduce using rule 33 (termino -> STRING .)
    LE              reduce using rule 33 (termino -> STRING .)
    SEMICOL         reduce using rule 33 (termino -> STRING .)
    COMA            reduce using rule 33 (termino -> STRING .)
    AND_OP          reduce using rule 33 (termino -> STRING .)
    OR_OP           reduce using rule 33 (termino -> STRING .)
    RBRACKET        reduce using rule 33 (termino -> STRING .)
    RPAREN          reduce using rule 33 (termino -> STRING .)
    LPAREN          reduce using rule 33 (termino -> STRING .)
    VARIABLE        reduce using rule 33 (termino -> STRING .)
    NUMBER          reduce using rule 33 (termino -> STRING .)
    FLOAT           reduce using rule 33 (termino -> STRING .)
    STRING          reduce using rule 33 (termino -> STRING .)


state 37

    (50) if_statement -> IF LPAREN . condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> IF LPAREN . condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> IF LPAREN . condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (34) condicion -> . expresion comparador expresion
    (35) condicion -> . condicion AND_OP condicion
    (36) condicion -> . condicion OR_OP condicion
    (37) condicion -> . NOT_OP condicion
    (38) condicion -> . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    NOT_OP          shift and go to state 46
    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    condicion                      shift and go to state 67
    expresion                      shift and go to state 68
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 38

    (14) funcion -> FUNCTION NAMEFUNCTION . LPAREN parametros RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 69


state 39

    (69) retorno -> RETURN expresion . SEMICOL

    SEMICOL         shift and go to state 70


state 40

    (55) for_statement -> FOR LPAREN . initialization condition increment RPAREN LBRACE statement_list RBRACE
    (56) initialization -> . VARIABLE ASSIGN expresion
    (57) initialization -> . initialization COMA VARIABLE ASSIGN expresion

    VARIABLE        shift and go to state 72

    initialization                 shift and go to state 71

state 41

    (15) asignacion -> VARIABLE ASSIGN expresion . SEMICOL
    (34) condicion -> expresion . comparador expresion
    (38) condicion -> expresion .
    (39) comparador -> . EQ
    (40) comparador -> . NEQ
    (41) comparador -> . GT
    (42) comparador -> . LT
    (43) comparador -> . GE
    (44) comparador -> . LE

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 73
    AND_OP          reduce using rule 38 (condicion -> expresion .)
    OR_OP           reduce using rule 38 (condicion -> expresion .)
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    GE              shift and go to state 63
    LE              shift and go to state 64

  ! SEMICOL         [ reduce using rule 38 (condicion -> expresion .) ]

    comparador                     shift and go to state 74

state 42

    (16) asignacion -> VARIABLE ASSIGN condicion . SEMICOL
    (35) condicion -> condicion . AND_OP condicion
    (36) condicion -> condicion . OR_OP condicion

    SEMICOL         shift and go to state 75
    AND_OP          shift and go to state 76
    OR_OP           shift and go to state 77


state 43

    (64) declarar_array -> VARIABLE ASSIGN ARRAY . LPAREN argumentos RPAREN SEMICOL

    LPAREN          shift and go to state 78


state 44

    (65) declarar_array -> VARIABLE ASSIGN LBRACKET . argumentos RBRACKET SEMICOL
    (66) argumentos -> . expresion
    (67) argumentos -> . expresion COMA argumentos
    (68) argumentos -> . empty
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (72) empty -> .
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    RBRACKET        reduce using rule 72 (empty -> .)
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    argumentos                     shift and go to state 79
    expresion                      shift and go to state 80
    empty                          shift and go to state 81
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 45

    (13) input_statement -> VARIABLE ASSIGN READLINE . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 82


state 46

    (37) condicion -> NOT_OP . condicion
    (34) condicion -> . expresion comparador expresion
    (35) condicion -> . condicion AND_OP condicion
    (36) condicion -> . condicion OR_OP condicion
    (37) condicion -> . NOT_OP condicion
    (38) condicion -> . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    NOT_OP          shift and go to state 46
    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    condicion                      shift and go to state 83
    expresion                      shift and go to state 68
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 47

    (71) array_access -> VARIABLE LBRACKET expresion . RBRACKET

    RBRACKET        shift and go to state 84


state 48

    (17) asignacion -> array_access ASSIGN expresion . SEMICOL

    SEMICOL         shift and go to state 85


state 49

    (19) impresion -> ECHO expresion SEMICOL .

    PHP_CLOSE       reduce using rule 19 (impresion -> ECHO expresion SEMICOL .)
    VARIABLE        reduce using rule 19 (impresion -> ECHO expresion SEMICOL .)
    ECHO            reduce using rule 19 (impresion -> ECHO expresion SEMICOL .)
    IF              reduce using rule 19 (impresion -> ECHO expresion SEMICOL .)
    FUNCTION        reduce using rule 19 (impresion -> ECHO expresion SEMICOL .)
    RETURN          reduce using rule 19 (impresion -> ECHO expresion SEMICOL .)
    FOR             reduce using rule 19 (impresion -> ECHO expresion SEMICOL .)
    RBRACE          reduce using rule 19 (impresion -> ECHO expresion SEMICOL .)


state 50

    (22) expresion_list -> expresion COMA . expresion_list
    (21) expresion_list -> . expresion
    (22) expresion_list -> . expresion COMA expresion_list
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 86
    expresion_list                 shift and go to state 87
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 51

    (20) impresion -> ECHO expresion_list SEMICOL .

    PHP_CLOSE       reduce using rule 20 (impresion -> ECHO expresion_list SEMICOL .)
    VARIABLE        reduce using rule 20 (impresion -> ECHO expresion_list SEMICOL .)
    ECHO            reduce using rule 20 (impresion -> ECHO expresion_list SEMICOL .)
    IF              reduce using rule 20 (impresion -> ECHO expresion_list SEMICOL .)
    FUNCTION        reduce using rule 20 (impresion -> ECHO expresion_list SEMICOL .)
    RETURN          reduce using rule 20 (impresion -> ECHO expresion_list SEMICOL .)
    FOR             reduce using rule 20 (impresion -> ECHO expresion_list SEMICOL .)
    RBRACE          reduce using rule 20 (impresion -> ECHO expresion_list SEMICOL .)


state 52

    (24) expresion -> termino operador . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    termino                        shift and go to state 29
    expresion                      shift and go to state 88
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 53

    (25) expresion -> termino comparador . termino
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING

    VARIABLE        shift and go to state 90
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    termino                        shift and go to state 89

state 54

    (45) operador -> PLUS .

    LPAREN          reduce using rule 45 (operador -> PLUS .)
    VARIABLE        reduce using rule 45 (operador -> PLUS .)
    NUMBER          reduce using rule 45 (operador -> PLUS .)
    FLOAT           reduce using rule 45 (operador -> PLUS .)
    STRING          reduce using rule 45 (operador -> PLUS .)


state 55

    (46) operador -> MINUS .

    LPAREN          reduce using rule 46 (operador -> MINUS .)
    VARIABLE        reduce using rule 46 (operador -> MINUS .)
    NUMBER          reduce using rule 46 (operador -> MINUS .)
    FLOAT           reduce using rule 46 (operador -> MINUS .)
    STRING          reduce using rule 46 (operador -> MINUS .)


state 56

    (47) operador -> TIMES .

    LPAREN          reduce using rule 47 (operador -> TIMES .)
    VARIABLE        reduce using rule 47 (operador -> TIMES .)
    NUMBER          reduce using rule 47 (operador -> TIMES .)
    FLOAT           reduce using rule 47 (operador -> TIMES .)
    STRING          reduce using rule 47 (operador -> TIMES .)


state 57

    (48) operador -> DIVIDE .

    LPAREN          reduce using rule 48 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 48 (operador -> DIVIDE .)
    NUMBER          reduce using rule 48 (operador -> DIVIDE .)
    FLOAT           reduce using rule 48 (operador -> DIVIDE .)
    STRING          reduce using rule 48 (operador -> DIVIDE .)


state 58

    (49) operador -> MOD .

    LPAREN          reduce using rule 49 (operador -> MOD .)
    VARIABLE        reduce using rule 49 (operador -> MOD .)
    NUMBER          reduce using rule 49 (operador -> MOD .)
    FLOAT           reduce using rule 49 (operador -> MOD .)
    STRING          reduce using rule 49 (operador -> MOD .)


state 59

    (39) comparador -> EQ .

    VARIABLE        reduce using rule 39 (comparador -> EQ .)
    NUMBER          reduce using rule 39 (comparador -> EQ .)
    FLOAT           reduce using rule 39 (comparador -> EQ .)
    STRING          reduce using rule 39 (comparador -> EQ .)
    LPAREN          reduce using rule 39 (comparador -> EQ .)


state 60

    (40) comparador -> NEQ .

    VARIABLE        reduce using rule 40 (comparador -> NEQ .)
    NUMBER          reduce using rule 40 (comparador -> NEQ .)
    FLOAT           reduce using rule 40 (comparador -> NEQ .)
    STRING          reduce using rule 40 (comparador -> NEQ .)
    LPAREN          reduce using rule 40 (comparador -> NEQ .)


state 61

    (41) comparador -> GT .

    VARIABLE        reduce using rule 41 (comparador -> GT .)
    NUMBER          reduce using rule 41 (comparador -> GT .)
    FLOAT           reduce using rule 41 (comparador -> GT .)
    STRING          reduce using rule 41 (comparador -> GT .)
    LPAREN          reduce using rule 41 (comparador -> GT .)


state 62

    (42) comparador -> LT .

    VARIABLE        reduce using rule 42 (comparador -> LT .)
    NUMBER          reduce using rule 42 (comparador -> LT .)
    FLOAT           reduce using rule 42 (comparador -> LT .)
    STRING          reduce using rule 42 (comparador -> LT .)
    LPAREN          reduce using rule 42 (comparador -> LT .)


state 63

    (43) comparador -> GE .

    VARIABLE        reduce using rule 43 (comparador -> GE .)
    NUMBER          reduce using rule 43 (comparador -> GE .)
    FLOAT           reduce using rule 43 (comparador -> GE .)
    STRING          reduce using rule 43 (comparador -> GE .)
    LPAREN          reduce using rule 43 (comparador -> GE .)


state 64

    (44) comparador -> LE .

    VARIABLE        reduce using rule 44 (comparador -> LE .)
    NUMBER          reduce using rule 44 (comparador -> LE .)
    FLOAT           reduce using rule 44 (comparador -> LE .)
    STRING          reduce using rule 44 (comparador -> LE .)
    LPAREN          reduce using rule 44 (comparador -> LE .)


state 65

    (26) expresion -> LPAREN expresion . RPAREN operador expresion
    (27) expresion -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 91


state 66

    (70) llamada_funcion -> VARIABLE LPAREN . argumentos RPAREN
    (66) argumentos -> . expresion
    (67) argumentos -> . expresion COMA argumentos
    (68) argumentos -> . empty
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (72) empty -> .
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    RPAREN          reduce using rule 72 (empty -> .)
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    argumentos                     shift and go to state 92
    expresion                      shift and go to state 80
    empty                          shift and go to state 81
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 67

    (50) if_statement -> IF LPAREN condicion . RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> IF LPAREN condicion . RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> IF LPAREN condicion . RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (35) condicion -> condicion . AND_OP condicion
    (36) condicion -> condicion . OR_OP condicion

    RPAREN          shift and go to state 93
    AND_OP          shift and go to state 76
    OR_OP           shift and go to state 77


state 68

    (34) condicion -> expresion . comparador expresion
    (38) condicion -> expresion .
    (39) comparador -> . EQ
    (40) comparador -> . NEQ
    (41) comparador -> . GT
    (42) comparador -> . LT
    (43) comparador -> . GE
    (44) comparador -> . LE

    RPAREN          reduce using rule 38 (condicion -> expresion .)
    AND_OP          reduce using rule 38 (condicion -> expresion .)
    OR_OP           reduce using rule 38 (condicion -> expresion .)
    SEMICOL         reduce using rule 38 (condicion -> expresion .)
    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    GE              shift and go to state 63
    LE              shift and go to state 64

    comparador                     shift and go to state 74

state 69

    (14) funcion -> FUNCTION NAMEFUNCTION LPAREN . parametros RPAREN LBRACE statement_list RBRACE
    (61) parametros -> . VARIABLE
    (62) parametros -> . VARIABLE COMA parametros
    (63) parametros -> . empty
    (72) empty -> .

    VARIABLE        shift and go to state 95
    RPAREN          reduce using rule 72 (empty -> .)

    parametros                     shift and go to state 94
    empty                          shift and go to state 96

state 70

    (69) retorno -> RETURN expresion SEMICOL .

    PHP_CLOSE       reduce using rule 69 (retorno -> RETURN expresion SEMICOL .)
    VARIABLE        reduce using rule 69 (retorno -> RETURN expresion SEMICOL .)
    ECHO            reduce using rule 69 (retorno -> RETURN expresion SEMICOL .)
    IF              reduce using rule 69 (retorno -> RETURN expresion SEMICOL .)
    FUNCTION        reduce using rule 69 (retorno -> RETURN expresion SEMICOL .)
    RETURN          reduce using rule 69 (retorno -> RETURN expresion SEMICOL .)
    FOR             reduce using rule 69 (retorno -> RETURN expresion SEMICOL .)
    RBRACE          reduce using rule 69 (retorno -> RETURN expresion SEMICOL .)


state 71

    (55) for_statement -> FOR LPAREN initialization . condition increment RPAREN LBRACE statement_list RBRACE
    (57) initialization -> initialization . COMA VARIABLE ASSIGN expresion
    (58) condition -> . expresion comparador expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    COMA            shift and go to state 98
    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    condition                      shift and go to state 97
    expresion                      shift and go to state 99
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 72

    (56) initialization -> VARIABLE . ASSIGN expresion

    ASSIGN          shift and go to state 100


state 73

    (15) asignacion -> VARIABLE ASSIGN expresion SEMICOL .

    PHP_CLOSE       reduce using rule 15 (asignacion -> VARIABLE ASSIGN expresion SEMICOL .)
    VARIABLE        reduce using rule 15 (asignacion -> VARIABLE ASSIGN expresion SEMICOL .)
    ECHO            reduce using rule 15 (asignacion -> VARIABLE ASSIGN expresion SEMICOL .)
    IF              reduce using rule 15 (asignacion -> VARIABLE ASSIGN expresion SEMICOL .)
    FUNCTION        reduce using rule 15 (asignacion -> VARIABLE ASSIGN expresion SEMICOL .)
    RETURN          reduce using rule 15 (asignacion -> VARIABLE ASSIGN expresion SEMICOL .)
    FOR             reduce using rule 15 (asignacion -> VARIABLE ASSIGN expresion SEMICOL .)
    RBRACE          reduce using rule 15 (asignacion -> VARIABLE ASSIGN expresion SEMICOL .)


state 74

    (34) condicion -> expresion comparador . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 101
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 75

    (16) asignacion -> VARIABLE ASSIGN condicion SEMICOL .

    PHP_CLOSE       reduce using rule 16 (asignacion -> VARIABLE ASSIGN condicion SEMICOL .)
    VARIABLE        reduce using rule 16 (asignacion -> VARIABLE ASSIGN condicion SEMICOL .)
    ECHO            reduce using rule 16 (asignacion -> VARIABLE ASSIGN condicion SEMICOL .)
    IF              reduce using rule 16 (asignacion -> VARIABLE ASSIGN condicion SEMICOL .)
    FUNCTION        reduce using rule 16 (asignacion -> VARIABLE ASSIGN condicion SEMICOL .)
    RETURN          reduce using rule 16 (asignacion -> VARIABLE ASSIGN condicion SEMICOL .)
    FOR             reduce using rule 16 (asignacion -> VARIABLE ASSIGN condicion SEMICOL .)
    RBRACE          reduce using rule 16 (asignacion -> VARIABLE ASSIGN condicion SEMICOL .)


state 76

    (35) condicion -> condicion AND_OP . condicion
    (34) condicion -> . expresion comparador expresion
    (35) condicion -> . condicion AND_OP condicion
    (36) condicion -> . condicion OR_OP condicion
    (37) condicion -> . NOT_OP condicion
    (38) condicion -> . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    NOT_OP          shift and go to state 46
    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    condicion                      shift and go to state 102
    expresion                      shift and go to state 68
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 77

    (36) condicion -> condicion OR_OP . condicion
    (34) condicion -> . expresion comparador expresion
    (35) condicion -> . condicion AND_OP condicion
    (36) condicion -> . condicion OR_OP condicion
    (37) condicion -> . NOT_OP condicion
    (38) condicion -> . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    NOT_OP          shift and go to state 46
    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    condicion                      shift and go to state 103
    expresion                      shift and go to state 68
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 78

    (64) declarar_array -> VARIABLE ASSIGN ARRAY LPAREN . argumentos RPAREN SEMICOL
    (66) argumentos -> . expresion
    (67) argumentos -> . expresion COMA argumentos
    (68) argumentos -> . empty
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (72) empty -> .
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    RPAREN          reduce using rule 72 (empty -> .)
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    argumentos                     shift and go to state 104
    expresion                      shift and go to state 80
    empty                          shift and go to state 81
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 79

    (65) declarar_array -> VARIABLE ASSIGN LBRACKET argumentos . RBRACKET SEMICOL

    RBRACKET        shift and go to state 105


state 80

    (66) argumentos -> expresion .
    (67) argumentos -> expresion . COMA argumentos

    RBRACKET        reduce using rule 66 (argumentos -> expresion .)
    RPAREN          reduce using rule 66 (argumentos -> expresion .)
    COMA            shift and go to state 106


state 81

    (68) argumentos -> empty .

    RBRACKET        reduce using rule 68 (argumentos -> empty .)
    RPAREN          reduce using rule 68 (argumentos -> empty .)


state 82

    (13) input_statement -> VARIABLE ASSIGN READLINE LPAREN . STRING RPAREN SEMICOL

    STRING          shift and go to state 107


state 83

    (37) condicion -> NOT_OP condicion .
    (35) condicion -> condicion . AND_OP condicion
    (36) condicion -> condicion . OR_OP condicion

    SEMICOL         reduce using rule 37 (condicion -> NOT_OP condicion .)
    AND_OP          reduce using rule 37 (condicion -> NOT_OP condicion .)
    OR_OP           reduce using rule 37 (condicion -> NOT_OP condicion .)
    RPAREN          reduce using rule 37 (condicion -> NOT_OP condicion .)

  ! AND_OP          [ shift and go to state 76 ]
  ! OR_OP           [ shift and go to state 77 ]


state 84

    (71) array_access -> VARIABLE LBRACKET expresion RBRACKET .

    ASSIGN          reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    SEMICOL         reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    COMA            reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    EQ              reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    NEQ             reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    GT              reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    LT              reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    GE              reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    LE              reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    AND_OP          reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    OR_OP           reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    LPAREN          reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    VARIABLE        reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    NUMBER          reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    FLOAT           reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)
    STRING          reduce using rule 71 (array_access -> VARIABLE LBRACKET expresion RBRACKET .)


state 85

    (17) asignacion -> array_access ASSIGN expresion SEMICOL .

    PHP_CLOSE       reduce using rule 17 (asignacion -> array_access ASSIGN expresion SEMICOL .)
    VARIABLE        reduce using rule 17 (asignacion -> array_access ASSIGN expresion SEMICOL .)
    ECHO            reduce using rule 17 (asignacion -> array_access ASSIGN expresion SEMICOL .)
    IF              reduce using rule 17 (asignacion -> array_access ASSIGN expresion SEMICOL .)
    FUNCTION        reduce using rule 17 (asignacion -> array_access ASSIGN expresion SEMICOL .)
    RETURN          reduce using rule 17 (asignacion -> array_access ASSIGN expresion SEMICOL .)
    FOR             reduce using rule 17 (asignacion -> array_access ASSIGN expresion SEMICOL .)
    RBRACE          reduce using rule 17 (asignacion -> array_access ASSIGN expresion SEMICOL .)


state 86

    (21) expresion_list -> expresion .
    (22) expresion_list -> expresion . COMA expresion_list

    SEMICOL         reduce using rule 21 (expresion_list -> expresion .)
    COMA            shift and go to state 50


state 87

    (22) expresion_list -> expresion COMA expresion_list .

    SEMICOL         reduce using rule 22 (expresion_list -> expresion COMA expresion_list .)


state 88

    (24) expresion -> termino operador expresion .

    SEMICOL         reduce using rule 24 (expresion -> termino operador expresion .)
    COMA            reduce using rule 24 (expresion -> termino operador expresion .)
    EQ              reduce using rule 24 (expresion -> termino operador expresion .)
    NEQ             reduce using rule 24 (expresion -> termino operador expresion .)
    GT              reduce using rule 24 (expresion -> termino operador expresion .)
    LT              reduce using rule 24 (expresion -> termino operador expresion .)
    GE              reduce using rule 24 (expresion -> termino operador expresion .)
    LE              reduce using rule 24 (expresion -> termino operador expresion .)
    AND_OP          reduce using rule 24 (expresion -> termino operador expresion .)
    OR_OP           reduce using rule 24 (expresion -> termino operador expresion .)
    RBRACKET        reduce using rule 24 (expresion -> termino operador expresion .)
    RPAREN          reduce using rule 24 (expresion -> termino operador expresion .)
    LPAREN          reduce using rule 24 (expresion -> termino operador expresion .)
    VARIABLE        reduce using rule 24 (expresion -> termino operador expresion .)
    NUMBER          reduce using rule 24 (expresion -> termino operador expresion .)
    FLOAT           reduce using rule 24 (expresion -> termino operador expresion .)
    STRING          reduce using rule 24 (expresion -> termino operador expresion .)


state 89

    (25) expresion -> termino comparador termino .

    SEMICOL         reduce using rule 25 (expresion -> termino comparador termino .)
    COMA            reduce using rule 25 (expresion -> termino comparador termino .)
    EQ              reduce using rule 25 (expresion -> termino comparador termino .)
    NEQ             reduce using rule 25 (expresion -> termino comparador termino .)
    GT              reduce using rule 25 (expresion -> termino comparador termino .)
    LT              reduce using rule 25 (expresion -> termino comparador termino .)
    GE              reduce using rule 25 (expresion -> termino comparador termino .)
    LE              reduce using rule 25 (expresion -> termino comparador termino .)
    AND_OP          reduce using rule 25 (expresion -> termino comparador termino .)
    OR_OP           reduce using rule 25 (expresion -> termino comparador termino .)
    RBRACKET        reduce using rule 25 (expresion -> termino comparador termino .)
    RPAREN          reduce using rule 25 (expresion -> termino comparador termino .)
    LPAREN          reduce using rule 25 (expresion -> termino comparador termino .)
    VARIABLE        reduce using rule 25 (expresion -> termino comparador termino .)
    NUMBER          reduce using rule 25 (expresion -> termino comparador termino .)
    FLOAT           reduce using rule 25 (expresion -> termino comparador termino .)
    STRING          reduce using rule 25 (expresion -> termino comparador termino .)


state 90

    (30) termino -> VARIABLE .

    SEMICOL         reduce using rule 30 (termino -> VARIABLE .)
    COMA            reduce using rule 30 (termino -> VARIABLE .)
    EQ              reduce using rule 30 (termino -> VARIABLE .)
    NEQ             reduce using rule 30 (termino -> VARIABLE .)
    GT              reduce using rule 30 (termino -> VARIABLE .)
    LT              reduce using rule 30 (termino -> VARIABLE .)
    GE              reduce using rule 30 (termino -> VARIABLE .)
    LE              reduce using rule 30 (termino -> VARIABLE .)
    AND_OP          reduce using rule 30 (termino -> VARIABLE .)
    OR_OP           reduce using rule 30 (termino -> VARIABLE .)
    RBRACKET        reduce using rule 30 (termino -> VARIABLE .)
    RPAREN          reduce using rule 30 (termino -> VARIABLE .)
    LPAREN          reduce using rule 30 (termino -> VARIABLE .)
    VARIABLE        reduce using rule 30 (termino -> VARIABLE .)
    NUMBER          reduce using rule 30 (termino -> VARIABLE .)
    FLOAT           reduce using rule 30 (termino -> VARIABLE .)
    STRING          reduce using rule 30 (termino -> VARIABLE .)


state 91

    (26) expresion -> LPAREN expresion RPAREN . operador expresion
    (27) expresion -> LPAREN expresion RPAREN .
    (45) operador -> . PLUS
    (46) operador -> . MINUS
    (47) operador -> . TIMES
    (48) operador -> . DIVIDE
    (49) operador -> . MOD

    SEMICOL         reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    NEQ             reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    GT              reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    LT              reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    GE              reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    LE              reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    AND_OP          reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    OR_OP           reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    NUMBER          reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    FLOAT           reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 27 (expresion -> LPAREN expresion RPAREN .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    MOD             shift and go to state 58

    operador                       shift and go to state 108

state 92

    (70) llamada_funcion -> VARIABLE LPAREN argumentos . RPAREN

    RPAREN          shift and go to state 109


state 93

    (50) if_statement -> IF LPAREN condicion RPAREN . LBRACE statement_list RBRACE
    (51) if_statement -> IF LPAREN condicion RPAREN . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> IF LPAREN condicion RPAREN . LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE

    LBRACE          shift and go to state 110


state 94

    (14) funcion -> FUNCTION NAMEFUNCTION LPAREN parametros . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 111


state 95

    (61) parametros -> VARIABLE .
    (62) parametros -> VARIABLE . COMA parametros

    RPAREN          reduce using rule 61 (parametros -> VARIABLE .)
    COMA            shift and go to state 112


state 96

    (63) parametros -> empty .

    RPAREN          reduce using rule 63 (parametros -> empty .)


state 97

    (55) for_statement -> FOR LPAREN initialization condition . increment RPAREN LBRACE statement_list RBRACE
    (59) increment -> . VARIABLE INCREMENT
    (60) increment -> . VARIABLE DECREMENT

    VARIABLE        shift and go to state 114

    increment                      shift and go to state 113

state 98

    (57) initialization -> initialization COMA . VARIABLE ASSIGN expresion

    VARIABLE        shift and go to state 115


state 99

    (58) condition -> expresion . comparador expresion
    (39) comparador -> . EQ
    (40) comparador -> . NEQ
    (41) comparador -> . GT
    (42) comparador -> . LT
    (43) comparador -> . GE
    (44) comparador -> . LE

    EQ              shift and go to state 59
    NEQ             shift and go to state 60
    GT              shift and go to state 61
    LT              shift and go to state 62
    GE              shift and go to state 63
    LE              shift and go to state 64

    comparador                     shift and go to state 116

state 100

    (56) initialization -> VARIABLE ASSIGN . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 117
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 101

    (34) condicion -> expresion comparador expresion .

    SEMICOL         reduce using rule 34 (condicion -> expresion comparador expresion .)
    AND_OP          reduce using rule 34 (condicion -> expresion comparador expresion .)
    OR_OP           reduce using rule 34 (condicion -> expresion comparador expresion .)
    RPAREN          reduce using rule 34 (condicion -> expresion comparador expresion .)


state 102

    (35) condicion -> condicion AND_OP condicion .
    (35) condicion -> condicion . AND_OP condicion
    (36) condicion -> condicion . OR_OP condicion

    SEMICOL         reduce using rule 35 (condicion -> condicion AND_OP condicion .)
    AND_OP          reduce using rule 35 (condicion -> condicion AND_OP condicion .)
    OR_OP           reduce using rule 35 (condicion -> condicion AND_OP condicion .)
    RPAREN          reduce using rule 35 (condicion -> condicion AND_OP condicion .)

  ! AND_OP          [ shift and go to state 76 ]
  ! OR_OP           [ shift and go to state 77 ]


state 103

    (36) condicion -> condicion OR_OP condicion .
    (35) condicion -> condicion . AND_OP condicion
    (36) condicion -> condicion . OR_OP condicion

    SEMICOL         reduce using rule 36 (condicion -> condicion OR_OP condicion .)
    OR_OP           reduce using rule 36 (condicion -> condicion OR_OP condicion .)
    RPAREN          reduce using rule 36 (condicion -> condicion OR_OP condicion .)
    AND_OP          shift and go to state 76

  ! AND_OP          [ reduce using rule 36 (condicion -> condicion OR_OP condicion .) ]
  ! OR_OP           [ shift and go to state 77 ]


state 104

    (64) declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos . RPAREN SEMICOL

    RPAREN          shift and go to state 118


state 105

    (65) declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET . SEMICOL

    SEMICOL         shift and go to state 119


state 106

    (67) argumentos -> expresion COMA . argumentos
    (66) argumentos -> . expresion
    (67) argumentos -> . expresion COMA argumentos
    (68) argumentos -> . empty
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (72) empty -> .
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    RBRACKET        reduce using rule 72 (empty -> .)
    RPAREN          reduce using rule 72 (empty -> .)
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 80
    argumentos                     shift and go to state 120
    empty                          shift and go to state 81
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 107

    (13) input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 121


state 108

    (26) expresion -> LPAREN expresion RPAREN operador . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 122
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 109

    (70) llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .

    SEMICOL         reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    COMA            reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    EQ              reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    NEQ             reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    GT              reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    LT              reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    GE              reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    LE              reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    AND_OP          reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    OR_OP           reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    RBRACKET        reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    RPAREN          reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    LPAREN          reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    VARIABLE        reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    NUMBER          reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    FLOAT           reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)
    STRING          reduce using rule 70 (llamada_funcion -> VARIABLE LPAREN argumentos RPAREN .)


state 110

    (50) if_statement -> IF LPAREN condicion RPAREN LBRACE . statement_list RBRACE
    (51) if_statement -> IF LPAREN condicion RPAREN LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> IF LPAREN condicion RPAREN LBRACE . statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20
    RBRACE          reduce using rule 72 (empty -> .)

  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement_list                 shift and go to state 123
    statement                      shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 111

    (14) funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 124


state 112

    (62) parametros -> VARIABLE COMA . parametros
    (61) parametros -> . VARIABLE
    (62) parametros -> . VARIABLE COMA parametros
    (63) parametros -> . empty
    (72) empty -> .

    VARIABLE        shift and go to state 95
    RPAREN          reduce using rule 72 (empty -> .)

    parametros                     shift and go to state 125
    empty                          shift and go to state 96

state 113

    (55) for_statement -> FOR LPAREN initialization condition increment . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 126


state 114

    (59) increment -> VARIABLE . INCREMENT
    (60) increment -> VARIABLE . DECREMENT

    INCREMENT       shift and go to state 127
    DECREMENT       shift and go to state 128


state 115

    (57) initialization -> initialization COMA VARIABLE . ASSIGN expresion

    ASSIGN          shift and go to state 129


state 116

    (58) condition -> expresion comparador . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 130
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 117

    (56) initialization -> VARIABLE ASSIGN expresion .

    COMA            reduce using rule 56 (initialization -> VARIABLE ASSIGN expresion .)
    LPAREN          reduce using rule 56 (initialization -> VARIABLE ASSIGN expresion .)
    VARIABLE        reduce using rule 56 (initialization -> VARIABLE ASSIGN expresion .)
    NUMBER          reduce using rule 56 (initialization -> VARIABLE ASSIGN expresion .)
    FLOAT           reduce using rule 56 (initialization -> VARIABLE ASSIGN expresion .)
    STRING          reduce using rule 56 (initialization -> VARIABLE ASSIGN expresion .)


state 118

    (64) declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN . SEMICOL

    SEMICOL         shift and go to state 131


state 119

    (65) declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL .

    PHP_CLOSE       reduce using rule 65 (declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL .)
    VARIABLE        reduce using rule 65 (declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL .)
    ECHO            reduce using rule 65 (declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL .)
    IF              reduce using rule 65 (declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL .)
    FUNCTION        reduce using rule 65 (declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL .)
    RETURN          reduce using rule 65 (declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL .)
    FOR             reduce using rule 65 (declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL .)
    RBRACE          reduce using rule 65 (declarar_array -> VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL .)


state 120

    (67) argumentos -> expresion COMA argumentos .

    RBRACKET        reduce using rule 67 (argumentos -> expresion COMA argumentos .)
    RPAREN          reduce using rule 67 (argumentos -> expresion COMA argumentos .)


state 121

    (13) input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 132


state 122

    (26) expresion -> LPAREN expresion RPAREN operador expresion .

    SEMICOL         reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    COMA            reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    EQ              reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    NEQ             reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    GT              reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    LT              reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    GE              reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    LE              reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    AND_OP          reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    OR_OP           reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    RBRACKET        reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    RPAREN          reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    LPAREN          reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    VARIABLE        reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    NUMBER          reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    FLOAT           reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)
    STRING          reduce using rule 26 (expresion -> LPAREN expresion RPAREN operador expresion .)


state 123

    (50) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list . RBRACE
    (51) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list . RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          shift and go to state 133
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20

  ! RBRACE          [ reduce using rule 72 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement                      shift and go to state 22
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 124

    (14) funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20
    RBRACE          reduce using rule 72 (empty -> .)

  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement_list                 shift and go to state 134
    statement                      shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 125

    (62) parametros -> VARIABLE COMA parametros .

    RPAREN          reduce using rule 62 (parametros -> VARIABLE COMA parametros .)


state 126

    (55) for_statement -> FOR LPAREN initialization condition increment RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 135


state 127

    (59) increment -> VARIABLE INCREMENT .

    RPAREN          reduce using rule 59 (increment -> VARIABLE INCREMENT .)


state 128

    (60) increment -> VARIABLE DECREMENT .

    RPAREN          reduce using rule 60 (increment -> VARIABLE DECREMENT .)


state 129

    (57) initialization -> initialization COMA VARIABLE ASSIGN . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    expresion                      shift and go to state 136
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 130

    (58) condition -> expresion comparador expresion .

    VARIABLE        reduce using rule 58 (condition -> expresion comparador expresion .)


state 131

    (64) declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL .

    PHP_CLOSE       reduce using rule 64 (declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL .)
    VARIABLE        reduce using rule 64 (declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL .)
    ECHO            reduce using rule 64 (declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL .)
    IF              reduce using rule 64 (declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL .)
    FUNCTION        reduce using rule 64 (declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL .)
    RETURN          reduce using rule 64 (declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL .)
    FOR             reduce using rule 64 (declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL .)
    RBRACE          reduce using rule 64 (declarar_array -> VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL .)


state 132

    (13) input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL .

    PHP_CLOSE       reduce using rule 13 (input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL .)
    VARIABLE        reduce using rule 13 (input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL .)
    ECHO            reduce using rule 13 (input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL .)
    IF              reduce using rule 13 (input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL .)
    FUNCTION        reduce using rule 13 (input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL .)
    RETURN          reduce using rule 13 (input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL .)
    FOR             reduce using rule 13 (input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL .)
    RBRACE          reduce using rule 13 (input_statement -> VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL .)


state 133

    (50) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE .
    (51) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE
    (52) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE . elseif_blocks ELSE LBRACE statement_list RBRACE
    (53) elseif_blocks -> . ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (54) elseif_blocks -> . elseif_blocks ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE

    PHP_CLOSE       reduce using rule 50 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    VARIABLE        reduce using rule 50 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    ECHO            reduce using rule 50 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 50 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 50 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 50 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 50 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 50 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    ELSE            shift and go to state 137
    ELSEIF          shift and go to state 139

    elseif_blocks                  shift and go to state 138

state 134

    (14) funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          shift and go to state 140
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20

  ! RBRACE          [ reduce using rule 72 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement                      shift and go to state 22
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 135

    (55) for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20
    RBRACE          reduce using rule 72 (empty -> .)

  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement_list                 shift and go to state 141
    statement                      shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 136

    (57) initialization -> initialization COMA VARIABLE ASSIGN expresion .

    COMA            reduce using rule 57 (initialization -> initialization COMA VARIABLE ASSIGN expresion .)
    LPAREN          reduce using rule 57 (initialization -> initialization COMA VARIABLE ASSIGN expresion .)
    VARIABLE        reduce using rule 57 (initialization -> initialization COMA VARIABLE ASSIGN expresion .)
    NUMBER          reduce using rule 57 (initialization -> initialization COMA VARIABLE ASSIGN expresion .)
    FLOAT           reduce using rule 57 (initialization -> initialization COMA VARIABLE ASSIGN expresion .)
    STRING          reduce using rule 57 (initialization -> initialization COMA VARIABLE ASSIGN expresion .)


state 137

    (51) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 142


state 138

    (52) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks . ELSE LBRACE statement_list RBRACE
    (54) elseif_blocks -> elseif_blocks . ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE

    ELSE            shift and go to state 143
    ELSEIF          shift and go to state 144


state 139

    (53) elseif_blocks -> ELSEIF . LPAREN condicion RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 145


state 140

    (14) funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE .

    PHP_CLOSE       reduce using rule 14 (funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE .)
    VARIABLE        reduce using rule 14 (funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE .)
    ECHO            reduce using rule 14 (funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 14 (funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 14 (funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 14 (funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 14 (funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 14 (funcion -> FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE .)


state 141

    (55) for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          shift and go to state 146
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20

  ! RBRACE          [ reduce using rule 72 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement                      shift and go to state 22
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 142

    (51) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20
    RBRACE          reduce using rule 72 (empty -> .)

  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement_list                 shift and go to state 147
    statement                      shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 143

    (52) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 148


state 144

    (54) elseif_blocks -> elseif_blocks ELSEIF . LPAREN condicion RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 149


state 145

    (53) elseif_blocks -> ELSEIF LPAREN . condicion RPAREN LBRACE statement_list RBRACE
    (34) condicion -> . expresion comparador expresion
    (35) condicion -> . condicion AND_OP condicion
    (36) condicion -> . condicion OR_OP condicion
    (37) condicion -> . NOT_OP condicion
    (38) condicion -> . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    NOT_OP          shift and go to state 46
    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    condicion                      shift and go to state 150
    expresion                      shift and go to state 68
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 146

    (55) for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE .

    PHP_CLOSE       reduce using rule 55 (for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE .)
    VARIABLE        reduce using rule 55 (for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE .)
    ECHO            reduce using rule 55 (for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 55 (for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 55 (for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 55 (for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE .)
    FOR             reduce using rule 55 (for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 55 (for_statement -> FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE .)


state 147

    (51) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          shift and go to state 151
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20

  ! RBRACE          [ reduce using rule 72 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement                      shift and go to state 22
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 148

    (52) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20
    RBRACE          reduce using rule 72 (empty -> .)

  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement_list                 shift and go to state 152
    statement                      shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 149

    (54) elseif_blocks -> elseif_blocks ELSEIF LPAREN . condicion RPAREN LBRACE statement_list RBRACE
    (34) condicion -> . expresion comparador expresion
    (35) condicion -> . condicion AND_OP condicion
    (36) condicion -> . condicion OR_OP condicion
    (37) condicion -> . NOT_OP condicion
    (38) condicion -> . expresion
    (23) expresion -> . termino
    (24) expresion -> . termino operador expresion
    (25) expresion -> . termino comparador termino
    (26) expresion -> . LPAREN expresion RPAREN operador expresion
    (27) expresion -> . LPAREN expresion RPAREN
    (28) expresion -> . llamada_funcion
    (29) expresion -> . array_access
    (30) termino -> . VARIABLE
    (31) termino -> . NUMBER
    (32) termino -> . FLOAT
    (33) termino -> . STRING
    (70) llamada_funcion -> . VARIABLE LPAREN argumentos RPAREN
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

    NOT_OP          shift and go to state 46
    LPAREN          shift and go to state 30
    VARIABLE        shift and go to state 33
    NUMBER          shift and go to state 34
    FLOAT           shift and go to state 35
    STRING          shift and go to state 36

    condicion                      shift and go to state 153
    expresion                      shift and go to state 68
    termino                        shift and go to state 29
    llamada_funcion                shift and go to state 31
    array_access                   shift and go to state 32

state 150

    (53) elseif_blocks -> ELSEIF LPAREN condicion . RPAREN LBRACE statement_list RBRACE
    (35) condicion -> condicion . AND_OP condicion
    (36) condicion -> condicion . OR_OP condicion

    RPAREN          shift and go to state 154
    AND_OP          shift and go to state 76
    OR_OP           shift and go to state 77


state 151

    (51) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    PHP_CLOSE       reduce using rule 51 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    VARIABLE        reduce using rule 51 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    ECHO            reduce using rule 51 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 51 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 51 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 51 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 51 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 51 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)


state 152

    (52) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          shift and go to state 155
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20

  ! RBRACE          [ reduce using rule 72 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement                      shift and go to state 22
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 153

    (54) elseif_blocks -> elseif_blocks ELSEIF LPAREN condicion . RPAREN LBRACE statement_list RBRACE
    (35) condicion -> condicion . AND_OP condicion
    (36) condicion -> condicion . OR_OP condicion

    RPAREN          shift and go to state 156
    AND_OP          shift and go to state 76
    OR_OP           shift and go to state 77


state 154

    (53) elseif_blocks -> ELSEIF LPAREN condicion RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 157


state 155

    (52) if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE .

    PHP_CLOSE       reduce using rule 52 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE .)
    VARIABLE        reduce using rule 52 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE .)
    ECHO            reduce using rule 52 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 52 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE .)
    FUNCTION        reduce using rule 52 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 52 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE .)
    FOR             reduce using rule 52 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 52 (if_statement -> IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE .)


state 156

    (54) elseif_blocks -> elseif_blocks ELSEIF LPAREN condicion RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 158


state 157

    (53) elseif_blocks -> ELSEIF LPAREN condicion RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20
    RBRACE          reduce using rule 72 (empty -> .)

  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement_list                 shift and go to state 159
    statement                      shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 158

    (54) elseif_blocks -> elseif_blocks ELSEIF LPAREN condicion RPAREN LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20
    RBRACE          reduce using rule 72 (empty -> .)

  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement_list                 shift and go to state 160
    statement                      shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 159

    (53) elseif_blocks -> ELSEIF LPAREN condicion RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          shift and go to state 161
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20

  ! RBRACE          [ reduce using rule 72 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement                      shift and go to state 22
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 160

    (54) elseif_blocks -> elseif_blocks ELSEIF LPAREN condicion RPAREN LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . asignacion
    (5) statement -> . impresion
    (6) statement -> . if_statement
    (7) statement -> . funcion
    (8) statement -> . declarar_array
    (9) statement -> . retorno
    (10) statement -> . input_statement
    (11) statement -> . for_statement
    (12) statement -> . empty
    (15) asignacion -> . VARIABLE ASSIGN expresion SEMICOL
    (16) asignacion -> . VARIABLE ASSIGN condicion SEMICOL
    (17) asignacion -> . array_access ASSIGN expresion SEMICOL
    (18) impresion -> . ECHO SEMICOL
    (19) impresion -> . ECHO expresion SEMICOL
    (20) impresion -> . ECHO expresion_list SEMICOL
    (50) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE
    (51) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (52) if_statement -> . IF LPAREN condicion RPAREN LBRACE statement_list RBRACE elseif_blocks ELSE LBRACE statement_list RBRACE
    (14) funcion -> . FUNCTION NAMEFUNCTION LPAREN parametros RPAREN LBRACE statement_list RBRACE
    (64) declarar_array -> . VARIABLE ASSIGN ARRAY LPAREN argumentos RPAREN SEMICOL
    (65) declarar_array -> . VARIABLE ASSIGN LBRACKET argumentos RBRACKET SEMICOL
    (69) retorno -> . RETURN expresion SEMICOL
    (13) input_statement -> . VARIABLE ASSIGN READLINE LPAREN STRING RPAREN SEMICOL
    (55) for_statement -> . FOR LPAREN initialization condition increment RPAREN LBRACE statement_list RBRACE
    (72) empty -> .
    (71) array_access -> . VARIABLE LBRACKET expresion RBRACKET

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    RBRACE          shift and go to state 162
    VARIABLE        shift and go to state 14
    ECHO            shift and go to state 16
    IF              shift and go to state 17
    FUNCTION        shift and go to state 18
    RETURN          shift and go to state 19
    FOR             shift and go to state 20

  ! RBRACE          [ reduce using rule 72 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 72 (empty -> .) ]
  ! ECHO            [ reduce using rule 72 (empty -> .) ]
  ! IF              [ reduce using rule 72 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 72 (empty -> .) ]
  ! RETURN          [ reduce using rule 72 (empty -> .) ]
  ! FOR             [ reduce using rule 72 (empty -> .) ]

    statement                      shift and go to state 22
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    if_statement                   shift and go to state 7
    funcion                        shift and go to state 8
    declarar_array                 shift and go to state 9
    retorno                        shift and go to state 10
    input_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    empty                          shift and go to state 13
    array_access                   shift and go to state 15

state 161

    (53) elseif_blocks -> ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE .

    ELSE            reduce using rule 53 (elseif_blocks -> ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    ELSEIF          reduce using rule 53 (elseif_blocks -> ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)


state 162

    (54) elseif_blocks -> elseif_blocks ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE .

    ELSE            reduce using rule 54 (elseif_blocks -> elseif_blocks ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)
    ELSEIF          reduce using rule 54 (elseif_blocks -> elseif_blocks ELSEIF LPAREN condicion RPAREN LBRACE statement_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for PHP_CLOSE in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 3 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 3 resolved as shift
WARNING: shift/reduce conflict for FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 27 resolved as shift
WARNING: shift/reduce conflict for EQ in state 29 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 29 resolved as shift
WARNING: shift/reduce conflict for GT in state 29 resolved as shift
WARNING: shift/reduce conflict for LT in state 29 resolved as shift
WARNING: shift/reduce conflict for GE in state 29 resolved as shift
WARNING: shift/reduce conflict for LE in state 29 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 33 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 41 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 110 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 110 resolved as shift
WARNING: shift/reduce conflict for IF in state 110 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 110 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 110 resolved as shift
WARNING: shift/reduce conflict for FOR in state 110 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 123 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 123 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 123 resolved as shift
WARNING: shift/reduce conflict for IF in state 123 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 123 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 123 resolved as shift
WARNING: shift/reduce conflict for FOR in state 123 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 124 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 124 resolved as shift
WARNING: shift/reduce conflict for IF in state 124 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 124 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 124 resolved as shift
WARNING: shift/reduce conflict for FOR in state 124 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 134 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 134 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 134 resolved as shift
WARNING: shift/reduce conflict for IF in state 134 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 134 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 134 resolved as shift
WARNING: shift/reduce conflict for FOR in state 134 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 135 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 135 resolved as shift
WARNING: shift/reduce conflict for IF in state 135 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 135 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 135 resolved as shift
WARNING: shift/reduce conflict for FOR in state 135 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 141 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 141 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 141 resolved as shift
WARNING: shift/reduce conflict for IF in state 141 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 141 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 141 resolved as shift
WARNING: shift/reduce conflict for FOR in state 141 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 142 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 142 resolved as shift
WARNING: shift/reduce conflict for IF in state 142 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 142 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 142 resolved as shift
WARNING: shift/reduce conflict for FOR in state 142 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 147 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 147 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 147 resolved as shift
WARNING: shift/reduce conflict for IF in state 147 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 147 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 147 resolved as shift
WARNING: shift/reduce conflict for FOR in state 147 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 148 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 148 resolved as shift
WARNING: shift/reduce conflict for IF in state 148 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 148 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 148 resolved as shift
WARNING: shift/reduce conflict for FOR in state 148 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 152 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 152 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 152 resolved as shift
WARNING: shift/reduce conflict for IF in state 152 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 152 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 152 resolved as shift
WARNING: shift/reduce conflict for FOR in state 152 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 157 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 157 resolved as shift
WARNING: shift/reduce conflict for IF in state 157 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 157 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 157 resolved as shift
WARNING: shift/reduce conflict for FOR in state 157 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 158 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 158 resolved as shift
WARNING: shift/reduce conflict for IF in state 158 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 158 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 158 resolved as shift
WARNING: shift/reduce conflict for FOR in state 158 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 159 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 159 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 159 resolved as shift
WARNING: shift/reduce conflict for IF in state 159 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 159 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 159 resolved as shift
WARNING: shift/reduce conflict for FOR in state 159 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 160 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 160 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 160 resolved as shift
WARNING: shift/reduce conflict for IF in state 160 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 160 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 160 resolved as shift
WARNING: shift/reduce conflict for FOR in state 160 resolved as shift
